package mybankingsystem;
/*
 * The program should do the following: 
 * 1. Get the name of the cashier and use it in records
 * 2. Commit customer transactions to the account which they control
 * 3. Display records of all transactions run during the instance of 
 * the system being open
 * 
 * Structure:
 * 	Get name of cashier as string
 *  Initialize current cashier action as {an integer equal to 0}
 * 	Initialize customer counter for the day as {an integer equal to 0}
 * 	Initialize array of customer names as strings
 * 	Initialize array of account numbers as integers
 * 	Initialize array of account balances as floating point numbers (floats)
 * 	1st level while loop to measure what the cashier is doing
 * 		2nd level conditional for analyzing cashier actions
 * 			0. Handling customers
 * 				Get the name of the customer as {customer names[customer counter]}
 * 				Get account number of customer as {account numbers[customer counter]}
 * 				3rd level while loop to analyze transactions
 * 					4th level Conditional to designate what transaction is being done
 * 						0. Deposit
 * 							Add deposit amount to account balance
 * 							Add transaction to the records
 * 						1. Withdrawal
 * 							Subtract withdrawal amount from account balance
 * 							Add transaction to the records
 * 				3rd Conditional to designate if the customer is done
 * 					0. Yes
 * 						Set customer counter to next value {+1}
 * 						Terminate loop
 * 					1. No
 * 						Pass loop
 * 			1. Checking records
 * 				For every customer in range 0 --> current customer (last value - 1)
 * 					Print(customer names[customer], "with account number", account numbers[customer])
 * 					Print("has a balance of", account balances[customer])
 * 	1st level conditional to check what the cashier is doing next
 * 		0. Customer handling
 * 			Set current cashier action as 0
 * 			Pass loop 
 * 		1. Checking records
 * 			Set current cashier action as 1
 * 			Pass loop
 * 		2. Done for the day
 * 			Print goodbye message
 * 			Terminate loop
 */
import java.util.Scanner;

public class MyBankingSystem {

    public static void main(String[] args) 
	{
		int CurrentCashierAction = 0, CustomerCounter = 0, CurrentTransaction;
		float FunctionValue = 0;
		int AccountNumber[] = new int[50];
		float AccountBalance[] = new float[50];
		String CustomerNames[] = new String[50]; 
	    Scanner input = new Scanner(System.in);
	    
	    System.out.print("Enter your name: \n");
	    String CashierName = input.nextLine();
	    
	    while (CurrentCashierAction < 2)
	    {
	    	if (CurrentCashierAction == 0)
	    	{
	    		 System.out.print("Enter customer name: \n");
	    		 CustomerNames[CustomerCounter] = input.nextLine();
	    		 
	    		 System.out.print("Enter account number: \n");
	    		 AccountNumber[CustomerCounter] = input.nextInt();
	    		 
	    		 System.out.print("What would the customer like to do?:\n\n");
	    		 System.out.print("0. Deposit \n");
	    		 System.out.print("1. Withdraw\n");
	    		 System.out.print("2. Loan\n");
	    		 CurrentTransaction = input.nextInt();
	    		 
	    		 	if (CurrentTransaction == 0)
	    		 	{
	    		 		System.out.print("How much money would you like to deposit\n");
	    		 		FunctionValue = input.nextFloat();
	    		 		AccountBalance[CustomerCounter] = AccountBalance[CustomerCounter] + FunctionValue;
	    		 	}
	    		 	
	    		 	else if (CurrentTransaction == 1)
	    		 	{
	    		 		System.out.print("How much money would you like to deposit\n");
	    		 		FunctionValue = input.nextFloat();
	    		 		
	    		 		if(AccountBalance[CustomerCounter] <= FunctionValue)
	    		 		{
	    		 			AccountBalance[CustomerCounter] = AccountBalance[CustomerCounter] - FunctionValue;
	    		 		}
	    		 		
	    		 		else
	    		 		{
	    		 			System.out.print("Unable to complete desired withdrawal amount\n");
	    		 		}
	    		 	}
	    		 	
	    		 	else if (CurrentTransaction == 2)
	    		 	{
	    		 		System.out.print("How much money would you like to loan\n");
	    		 		FunctionValue = input.nextFloat();
	    		 		AccountBalance[CustomerCounter] = AccountBalance[CustomerCounter] - FunctionValue;
	    		 	}
	    	}
	    	
	    	else if (CurrentCashierAction == 1)
	    	{
	    		
	    	}
	    }
	    
	    input.close();
	}
}
